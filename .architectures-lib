#!/usr/bin/env bash

_commitOrCat() {
	local f="$1"; shift
	if [ -n "${commit:-}" ]; then
		git show "$commit":"$f"
	else
		cat "$f"
	fi
}

_awkArch() {
	local awkExpr="$1"; shift
	_commitOrCat release-architectures | awk "$@" "/^#|^\$/ { next } $awkExpr"
}

dpkgArches() {
	_awkArch '{ print $2 }'
}

dpkgToBashbrewArch() {
	local dpkgArch="$1"; shift
	_awkArch '$2 == dpkgArch { print $1; exit }' -v dpkgArch="$dpkgArch"
}

dpkgToPyPyArch() {
	local dpkgArch="$1"; shift
	_awkArch '$2 == dpkgArch { print $3; exit }' -v dpkgArch="$dpkgArch"
}

_generateParentRepoToArches() {
	local repo="$1"; shift
	local officialImagesUrl='https://github.com/docker-library/official-images/raw/master/library/'

	eval "declare -g -A parentRepoToArches=( $(
		find -name 'Dockerfile' -exec awk '
				toupper($1) == "FROM" && $2 !~ /^('"$repo"'|scratch|microsoft\/[^:]+)(:|$)/ {
					print "'"$officialImagesUrl"'" $2
				}
			' '{}' + \
			| sort -u \
			| xargs bashbrew cat --format '[{{ .RepoName }}:{{ .TagName }}]="{{ join " " .TagEntry.Architectures }}"'
	) )"
}
_generateParentRepoToArches 'pypy'

hasBashbrewArch() {
	local dir="$1"; shift
	local bashbrewArch="$1"; shift
	_commitOrCat "$dir/Dockerfile" | grep -qE "^# ${bashbrewArch}\$"
}

parentArches() {
	local dir="$1"; shift # "2", "3/slim", etc

	local parent="$(_commitOrCat "$dir/Dockerfile" | awk 'toupper($1) == "FROM" { print $2 }')"
	local parentArches="${parentRepoToArches[$parent]:-}"

	local arches=()
	for arch in $parentArches; do
		if hasBashbrewArch "$dir" "$arch"; then
			arches+=( "$arch" )
		fi
	done
	echo "${arches[*]:-}"
}
